import {assert} from 'chai';
import bel from 'bel';
import domEvents from 'dom-events';
import augment from '../../../src/mdc-knockout-augment';
import {ToolbarTemplate, ToolbarViewModel} from '../../../src/mdc-knockout-toolbar';
import {MDCToolbar} from '@material/toolbar';

import ko from 'knockout';
augment.registerBindings(ko);
augment.registerComponent(ko, 'mdc-toolbar', ToolbarTemplate(), ToolbarViewModel, MDCToolbar);

suite('toolbar component');


// text binding on the title works
// foreach works
// check if adjust element has margin
// MDCToolbar:change event changes ratio
// content is transformed
// child elements deeper than level 2 are not transformed

test('multiline, fullwidth, and invaid are unwrapped', (done) => {
  const component = bel`
    <mdc-toolbar params="
      multiline: multiline,
      fullwidth: fullwidth,
      invalid: invalid
    "></mdc-toolbar>`;
  const multiline = ko.observable(true);
  const fullwidth = ko.observable(true);
  const invalid = ko.observable(true);
  ko.applyBindings({multiline: multiline, fullwidth: fullwidth, invalid: invalid}, component);

  setTimeout(() => {
    const wrapper = component.querySelector('.mdc-toolbar');
    const initialClasses = wrapper.className;

    multiline(false);
    fullwidth(false);
    invalid(false);

    assert.equal(initialClasses, wrapper.className);

    done();
  });
});
